<launch>

  <arg name="gui" default="true" />
  <arg name="gpu" default="0" />

  <arg name="use_static_image" default="false" />
  <arg name="input_image" value="test/image_raw" />
  <arg name="image_name" value="$(find jsk_perception)/learning_datasets/2019-04-28-07-04-27_mask_rcnn_drone_tracking_training_data_voc/JPEGImages/drone10.jpg" />

  <arg name="network_model" default="$(find jsk_perception)/trained_data/2019-04-28-07-04-27_mask_rcnn_drone_tracking_training_result/snapshot_model.npz"/>

  <node name="image_publisher"
        pkg="jsk_perception" type="image_publisher.py"
        clear_params="true" if="$(arg use_static_image)">
    <rosparam subst_value="true">
      file_name: $(arg image_name)
      rate: 1
    </rosparam>
    <remap from="/image_publisher/output" to="$(arg input_image)" />
  </node>

  <arg name="video_file" default="$(find jsk_perception)/sample/data/drone_tracking_sample2.MP4" />
  <include file="$(find video_stream_opencv)/launch/camera.launch" unless="$(arg use_static_image)" >
    <arg name="video_stream_provider" value="$(arg video_file)" />
    <arg name="buffer_queue_size" value="1" />
    <arg name="fps" value="30" />
    <arg name="camera_name" value="test" />
  </include>


  <node name="mask_rcnn_instance_segmentation"
        pkg="jsk_perception" type="mask_rcnn_instance_segmentation.py"
        clear_params="true">
    <remap from="~input" to="$(arg input_image)" />
    <rosparam subst_value="true">
      gpu: $(arg gpu)
      scorre_thresh: 0.7
      pretrained_model: $(arg network_model)
      fg_class_names:
       - dragon
    </rosparam>
  </node>

  <!-- use cluster_indices and labels -->
  <node name="image_cluster_indices_decomposer"
        pkg="jsk_perception" type="image_cluster_indices_decomposer.py"
        clear_params="true">
    <remap from="~input" to="$(arg input_image)" />
    <remap from="~input/cluster_indices"
           to="mask_rcnn_instance_segmentation/output/cluster_indices" />
  </node>

  <!-- use lbl_cls and lbl_ins -->
  <node name="label_cls_to_mask"
        pkg="jsk_perception" type="label_to_mask_image"
        clear_params="true">
    <remap from="~input" to="mask_rcnn_instance_segmentation/output/label_cls" />
    <rosparam subst_value="true">
      label_value: 14
    </rosparam>
  </node>
  <node name="apply_mask_image"
        pkg="jsk_perception" type="apply_mask_image"
        clear_params="true">
    <remap from="~input" to="mask_rcnn_instance_segmentation/output/label_ins" />
    <remap from="~input/mask" to="label_cls_to_mask/output" />
    <rosparam subst_value="true">
      clip: false
      cval: -1
    </rosparam>
  </node>
  <node name="label_image_decomposer"
        pkg="jsk_perception" type="label_image_decomposer.py"
        clear_params="true">
    <remap from="~input" to="$(arg input_image)" />
    <remap from="~input/label" to="apply_mask_image/output" />
    <rosparam subst_value="true">
      bg_label: -1
    </rosparam>
  </node>

  <node name="tile_image"
        pkg="jsk_perception" type="tile_image.py"
        clear_params="true">
    <rosparam subst_value="true">
      input_topics:
        - $(arg input_image)
        - mask_rcnn_instance_segmentation/output/viz
        - image_cluster_indices_decomposer/output
        - label_image_decomposer/output/label_viz
      draw_topic_name: true
      font_scale: 0.8
      font_thickness: 2
    </rosparam>
  </node>

  <group if="$(arg gui)">
    <node name="image_view"
          pkg="image_view" type="image_view"
          clear_params="true">
      <remap from="image" to="tile_image/output" />
    </node>
  </group>

</launch>
